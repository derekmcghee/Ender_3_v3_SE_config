[prtouch_v2]
pres_cnt: 1                     #探点次数
pres0_clk_pins: PA4             #压力检测时钟引脚配置
pres0_sdo_pins: PC6             #压力检测数据引脚配置
step_swap_pin: PA15
pres_swap_pin: PA15
step_base:2
# show_msg: True
tri_min_hold: 1000
tri_max_hold: 1500            #压力检测信息展示
speed: 1
# tri_wave_ip: 172.22.30.204
#####################################################

[z_compensate]
tri_min_hold: 1400
tri_max_hold: 2000            #压力检测信息展示
tri_expand_mm = 0.07
# tri_min_hold: 3
speed: 5
hot_start_temp: 180#擦喷嘴是最小温度
hot_rub_temp: 200#擦喷嘴是最小温度
hot_end_temp: 140#擦喷嘴是最小温度
bed_add_temp: 60#调平时的热床温度
clr_noz_start_x: 0 #擦喷头区域的起始x坐标（默认在热床后方正中心位置）
clr_noz_start_y: 5 #擦喷头区域的起始y坐标
clr_noz_len_x: 3 #擦喷头区域的x方向的长度
clr_noz_len_y: 50 #擦喷头区域的y方向的长度
pa_clr_dis_mm_x = 0
pa_clr_dis_mm_y =30
# show_msg = True
bl_offset:-24,-20
noz_pos_center: 20,25
noz_pos_offset: 3,7
pumpback_mm: 10
vs_start_z_pos: 3
pr_probe_cnt: 3
pr_clear_probe_cnt: 3
type_nozz = 0

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    G91
    G1 Z2
    G90
    G1 F3000X0Y220
    M104 S0
    M140 S0
    M107
    M84
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE


# [gcode_macro PRINT_CALIBRATION]
# # This part of the command is replaced by the application side without passing parameters
# gcode:
  # CX_PRINT_LEVELING_CALIBRATION

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    # {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    # {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}

    {% set x_park = 0 %}
    {% set y_park = 222 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < 48.0 %}
        {% set z_safe = 50.0 - act_z %}
    {% elif act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    SET_GCODE_VARIABLE MACRO=PRINTER_PARAM VARIABLE=z_safe_pause VALUE={z_safe|float}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F600
      M400
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    {% set z_resume_move = printer['gcode_macro PRINTER_PARAM'].z_safe_pause|int %}
    {% if z_resume_move > 2 %}
      {% set z_resume_move = z_resume_move - 2 %}
      G91
      G1 Z-{z_resume_move} F600
      M400
    {% endif %}

    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    RESUME_BASE {get_params}

[gcode_macro M900]
gcode:
  {% if 'K' in params %}
    {% if 'E' in params %}
      SET_PRESSURE_ADVANCE EXTRUDER={params.E} ADVANCE={params.K}
    {% else %}
      SET_PRESSURE_ADVANCE ADVANCE={params.K}
    {% endif %}
  {% endif %}


[gcode_arcs]#打印圆
resolution: 1.0


[gcode_macro M204]
rename_existing: M204.1
gcode:
  # {% if printer['gcode_macro Qmode'].flag|int == 0 %}
  {% set get_params = "" %}
  {% if 'S' in params|upper %}
    {% set get_params = (get_params + ' ' + 'S' + params.S) %}
  {% endif %}
  {% if 'P' in params|upper %}
    {% set get_params = (get_params + ' ' + 'P' + params.P) %}
  {% endif %}
  {% if 'T' in params|upper %}
    {% set get_params = (get_params + ' ' + 'T' + params.T) %}
  {% endif %}
  M204.1 {get_params}
  # {% endif %}

[gcode_macro M205]
gcode:
  {% if 'X' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.X}
  {% elif 'Y' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.Y}
  {% endif %}


[gcode_macro G29]
gcode:
  M204 S5000
  G90
  G28
  Z_OFFSET_AUTO
  M104S0
  M107
  G28 Z
  BED_MESH_CALIBRATE
  G1 X110Y110Z10
  M140S0
  SAVE_CONFIG


[gcode_macro INPUTSHAPER_X]
gcode:
  M84
  G90
  G28
  SHAPER_CALIBRATE AXIS=x
  SAVE_CONFIG

[gcode_macro INPUTSHAPER_Y]
gcode:
  M84
  G90
  G28
  SHAPER_CALIBRATE AXIS=y
  SAVE_CONFIG
[gcode_macro AUTOTUNE_SHAPERS]
variable_autotune_shapers: 'mzv'
gcode:

[gcode_macro Z_OFFSET_TEST]
gcode:
  # Z_OFFSET_AUTO
  G28
  # NOZZLE_CLEAR
  Z_OFFSET_CALIBRATION
  SAVE_CONFIG

[gcode_macro ZZ_OFFSET_TEST]
gcode:

  G28
  Z_OFFSET_AUTO
  # NOZZLE_CLEAR
  # Z_OFFSET_CALIBRATION
  SAVE_CONFIG


[gcode_macro PRINTER_PARAM]
variable_max_x_position: 220.0
variable_max_y_position: 220.0
variable_max_z_position: 250.0
variable_z_safe_pause: 0.0
variable_g28_extruder_temp: 140
variable_fan0_min: 35
variable_z_safe_g28: 10.0
variable_fans: 1
gcode:

# [force_move]
#     enable_force_move: true

[gcode_macro xyz_ready]
variable_x_ready: 0
variable_y_ready: 0
variable_z_ready: 0
variable_x_moved: 0
variable_y_moved: 0
variable_z_moved: 0
variable_safe_z: 5
gcode:

[gcode_macro _IF_HOME_Z]
gcode:
  # BED_MESH_SET_DISABLE
  {% if printer['gcode_macro xyz_ready'].z_ready|int == 1 %}
    {% if printer.toolhead.position.z|int < 10 %}
      {% set z_park = 10.0 - printer.toolhead.position.z|int %}
      G91
      G1 z{z_park} F600
      G90
    {% endif %}
  {% else %}
    {% if printer['gcode_macro xyz_ready'].z_moved|int == 0 %}
      # BED_MESH_SET_DISABLE
      # FORCE_MOVE STEPPER=stepper_z DISTANCE={printer["gcode_macro PRINTER_PARAM"].z_safe_g28} VELOCITY=10
      SET_GCODE_VARIABLE MACRO=xyz_ready VARIABLE=z_moved VALUE=1
    {% endif %}
  {% endif %}

[gcode_macro _IF_MOVE_X]
gcode:
  # BED_MESH_SET_DISABLE
  {% if printer['gcode_macro xyz_ready'].x_moved|int == 0 %}
    {% if printer['gcode_macro xyz_ready'].y_moved|int == 0 %}
      {% set SAFE_Z = printer['gcode_macro xyz_ready'].safe_z|int%}
      FORCE_MOVE STEPPER=stepper_z DISTANCE={SAFE_Z} VELOCITY=20
    {% endif %}
    FORCE_MOVE STEPPER=stepper_x DISTANCE=10 VELOCITY=20
    SET_GCODE_VARIABLE MACRO=xyz_ready VARIABLE=x_moved VALUE=1
  {% endif %}

[gcode_macro _IF_MOVE_Y]
gcode:
  # BED_MESH_SET_DISABLE
  {% if printer['gcode_macro xyz_ready'].y_moved|int == 0 %}
    {% if printer['gcode_macro xyz_ready'].x_moved|int == 0 %}
      {% set SAFE_Z =printer['gcode_macro xyz_ready'].safe_z|int%}
      FORCE_MOVE STEPPER=stepper_z DISTANCE={SAFE_Z} VELOCITY=20
    {% endif %}
    FORCE_MOVE STEPPER=stepper_y DISTANCE=10 VELOCITY=20
    SET_GCODE_VARIABLE MACRO=xyz_ready VARIABLE=y_moved VALUE=1
  {% endif %}

[gcode_macro _HOME_X]
gcode:
   _IF_MOVE_X
  G28 X
  SET_GCODE_VARIABLE MACRO=xyz_ready VARIABLE=x_ready VALUE=1
  G1 x10 F4800
  G28 x
  G91 X5 F2000
  G90
  # Wait just a second (give StallGuard registers time to clear)
  # G4 P2000

[gcode_macro _HOME_Y]
gcode:
   _IF_MOVE_Y
  # SET_TMC_FIELD FIELD=SGTHRS STEPPER=stepper_y VALUE=85
  G28 Y
  SET_GCODE_VARIABLE MACRO=xyz_ready VARIABLE=y_ready VALUE=1
  G1 Y10 F4800
  G28 Y
  G91
  G1 y5 F2000
  G90
  # Wait just a second (give StallGuard registers time to clear)
  # G4 P2000

[gcode_macro _HOME_Z]
gcode:
  {% if printer['gcode_macro xyz_ready'].y_ready|int == 1 %}
    {% if printer['gcode_macro xyz_ready'].x_ready|int == 1 %}
      _IF_HOME_Z
    {% endif %}
  {% endif %}
  {% if printer['gcode_macro xyz_ready'].x_ready|int == 0 %}
    _HOME_X
  {% endif %}
  {% if printer['gcode_macro xyz_ready'].y_ready|int == 0 %}
    _HOME_Y
  {% endif %}
  G90
  {% set bl_offset = printer.configfile.settings['bltouch'] %}
  {% set x_park = printer['gcode_macro PRINTER_PARAM'].max_x_position/2 - bl_offset.x_offset %}
  {% set y_park = printer['gcode_macro PRINTER_PARAM'].max_y_position/2 - bl_offset.y_offset %}
  {action_respond_info("x_park = %s \n" % (x_park))}
  {action_respond_info("y_park = %s \n" % (y_park))}
  G1 x{x_park} y{y_park} F6000
  G4 P500 # P1000

  G28 Z
  SET_GCODE_VARIABLE MACRO=xyz_ready VARIABLE=z_ready VALUE=1
  G1 X110Y110Z5 F2400


[homing_override]
axes: xyz
gcode:
  BED_MESH_SAVE
  BED_MESH_CLEAR
  {% set x_axes = printer.toolhead.homed_axes %}
  {% if x_axes is defined and x_axes[0] is defined %}
    {action_respond_info(
        "x_axes: %s \n"
        % (x_axes))}
  {% else %}
    SET_GCODE_VARIABLE MACRO=xyz_ready VARIABLE=x_ready VALUE=0
    SET_GCODE_VARIABLE MACRO=xyz_ready VARIABLE=y_ready VALUE=0
    SET_GCODE_VARIABLE MACRO=xyz_ready VARIABLE=z_ready VALUE=0
    SET_GCODE_VARIABLE MACRO=xyz_ready VARIABLE=x_moved VALUE=0
    SET_GCODE_VARIABLE MACRO=xyz_ready VARIABLE=y_moved VALUE=0
    SET_GCODE_VARIABLE MACRO=xyz_ready VARIABLE=z_moved VALUE=0
    {action_respond_info(
        "axes is NULL\n")}
  {% endif %}
  {% set home_all = 'X' not in params and 'Y' not in params %}
  {% if 'Z' in params and 'X' not in params and 'Y' not in params %}
    {% if x_axes[0] is defined and x_axes[1] is defined %}
      {% set home_all = 0 %}
    {% endif %}
  {% endif %}

  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %} # G28
  {% if home_all or 'X' in params %} # G28 / G28 X / G28 X Y / G28 X Y Z
    _HOME_X
  {% endif %}

  {% if home_all or 'Y' in params %} # G28 / G28 Y / G28 X Y / G28 X Y Z
    _HOME_Y
  {% endif %}

  {% if home_all or 'Z' in params %} # G28 / G28 Z / G28 X Y Z
   _HOME_Z
   BED_MESH_PROFILE LOAD="default"
  {% endif %}
  BED_MESH_RESTORE
  G4 P500
